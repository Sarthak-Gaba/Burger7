{"version":3,"sources":["components/Order/Order.js","containers/Orders/Orders.js","components/Order/Order.module.css"],"names":["order","props","ingredient","key","push","name","amount","ingredientOutput","map","ig","className","classes","Ingredient","Order","price","Orders","this","token","onFetchOrders","userId","localStorage","getItem","orders","Spinner","loading","id","Component","connect","state","auth","tokenId","dispatch","actions","withErrorHandler","axios","module","exports"],"mappings":"oLAwBeA,EArBD,SAACC,GACX,IAAMC,EAAa,GAEnB,IAAI,IAAIC,KAAOF,EAAMC,WACjBA,EAAWE,KAAK,CACZC,KAAMF,EAAKG,OAAQL,EAAMC,WAAWC,KAI5C,IAAMI,EAAmBL,EAAWM,KAAI,SAAAC,GACpC,OAAO,0BAAMN,IAAKM,EAAGJ,KAAMK,UAAWC,IAAQC,YAAvC,IAAqDH,EAAGJ,KAAxD,IAA+DI,EAAGH,OAAlE,QAGX,OACI,yBAAKI,UAAWC,IAAQE,OACpB,2CAAiBN,GACjB,qCAAU,sCAAYN,EAAMa,MAAlB,Q,gCCVhBC,E,kLAEMC,KAAKf,MAAMgB,MAIXD,KAAKf,MAAMiB,cAAcF,KAAKf,MAAMgB,MAAOD,KAAKf,MAAMkB,QAHtDH,KAAKf,MAAMiB,cAAcE,aAAaC,QAAQ,Y,+BAQlD,IAAIC,EAAS,kBAACC,EAAA,EAAD,MAUb,OATKP,KAAKf,MAAMuB,UACZF,EAASN,KAAKf,MAAMqB,OAAOd,KAAI,SAAAC,GAC3B,OAAO,kBAACI,EAAD,CACHV,IAAKM,EAAGgB,GACRvB,WAAYO,EAAGP,WACfY,MAAOL,EAAGK,YAKlB,6BACKQ,O,GAvBII,aA4CNC,uBAfS,SAAAC,GACpB,MAAO,CACHN,OAAQM,EAAM5B,MAAMsB,OACpBE,QAASI,EAAM5B,MAAMwB,QACrBP,MAAOW,EAAMC,KAAKC,QAClBX,OAAQS,EAAMC,KAAKV,WAIA,SAAAY,GACvB,MAAO,CACHb,cAAe,SAACD,EAAOE,GAAR,OAAmBY,EAASC,IAAoBf,EAAME,QAI9DQ,CAA6CM,YAAiBlB,EAAQmB,O,mBCpDrFC,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,WAAa","file":"static/js/5.cae6112a.chunk.js","sourcesContent":["import React from 'react';\r\nimport classes from './Order.module.css';\r\n\r\nconst order = (props) => {\r\n    const ingredient = [];\r\n\r\n    for(let key in props.ingredient){\r\n        ingredient.push({\r\n            name: key, amount: props.ingredient[key]\r\n        });\r\n    }\r\n\r\n    const ingredientOutput = ingredient.map(ig => {\r\n        return <span key={ig.name} className={classes.Ingredient}> {ig.name}:{ig.amount} </span>;\r\n    });\r\n\r\n    return (\r\n        <div className={classes.Order}>\r\n            <p>Ingredients: {ingredientOutput}</p>\r\n            <p>Price: <strong>Rs {props.price} </strong></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default order;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Order from \"../../components/Order/Order\";\r\nimport axios from '../../axios-order';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nclass Orders extends Component {\r\n    componentDidMount() {\r\n        if(!this.props.token) {\r\n            this.props.onFetchOrders(localStorage.getItem('token'));\r\n        }\r\n        else {\r\n            this.props.onFetchOrders(this.props.token, this.props.userId);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let orders = <Spinner />;\r\n        if (!this.props.loading) {\r\n            orders = this.props.orders.map(ig => {\r\n                return <Order\r\n                    key={ig.id}\r\n                    ingredient={ig.ingredient}\r\n                    price={ig.price} />\r\n            })\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {orders}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading,\r\n        token: state.auth.tokenId,\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token,userId))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3HlA9\",\"Ingredient\":\"Order_Ingredient__3fD01\"};"],"sourceRoot":""}